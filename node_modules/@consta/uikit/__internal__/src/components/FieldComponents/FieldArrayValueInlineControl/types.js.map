{"version":3,"file":"types.js","names":[],"sources":["../../../../../../src/components/FieldComponents/FieldArrayValueInlineControl/types.ts"],"sourcesContent":["import React from 'react';\n\nimport { PropsWithHTMLAttributesAndRef } from '##/utils/types/PropsWithHTMLAttributes';\n\nimport { FieldPropSize } from '../types';\n\nexport type FieldArrayValueInlineControlProps<ITEM> =\n  PropsWithHTMLAttributesAndRef<\n    {\n      children?: never;\n      value?: ITEM[];\n      renderValue: (item: ITEM, index: number) => React.ReactNode;\n      inputMaxLength?: number;\n      inputValue?: string;\n      inputDefaultValue?: string;\n      inputRef?: React.Ref<HTMLInputElement>;\n      onInputFocus?: React.FocusEventHandler<HTMLInputElement>;\n      onBlur?: React.FocusEventHandler<HTMLInputElement>;\n      onChange?: React.ChangeEventHandler<HTMLInputElement>;\n      autoFocus?: boolean;\n      inputTabIndex?: number;\n      inputAriaLabel?: string;\n      onKeyDown?: React.KeyboardEventHandler<HTMLInputElement>;\n      onKeyDownCapture?: React.KeyboardEventHandler<HTMLInputElement>;\n      onKeyUp?: React.KeyboardEventHandler<HTMLInputElement>;\n      onKeyUpCapture?: React.KeyboardEventHandler<HTMLInputElement>;\n      disabled?: boolean;\n      placeholder?: string;\n      size?: FieldPropSize;\n      onWheel?: React.WheelEventHandler<HTMLInputElement>;\n    },\n    HTMLDivElement\n  >;\n\nexport type FieldArrayValueInlineControlComponent = <ITEM>(\n  props: FieldArrayValueInlineControlProps<ITEM>,\n) => React.ReactElement | null;\n"],"mappings":""}