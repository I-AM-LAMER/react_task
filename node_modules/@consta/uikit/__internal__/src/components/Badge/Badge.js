import _defineProperty from"@babel/runtime/helpers/defineProperty";import _objectWithoutProperties from"@babel/runtime/helpers/objectWithoutProperties";var _excluded=["size","view","status","form","icon","iconLeft","iconRight","minified","label","as","title","style"];function ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function _objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?ownKeys(Object(b),!0).forEach(function(c){_defineProperty(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}import"./Badge.css";import{classnames}from"@bem-react/classnames";import React from"react";import{useTheme}from"../Theme";import{forwardRefWithAs}from"../../utils/types/PropsWithAsAttributes";import{cnBadge}from"./cn";import{guardStatus}from"./guardStatus";import{getBgColor,getBorderColor,getDegreeMixing,getHorizontalPadding,getMinifiedBorderSize,getSize,getTextColor,getTextSize}from"./maps";import{badgePropFormDefault,badgePropSizeDefault,badgePropStatusDefault,badgePropViewDefault}from"./types";var renderIcon=function(a){return a?React.createElement(a,{size:"xs",className:cnBadge("Icon")}):null};export var Badge=forwardRefWithAs(function(a,b){var c=a.size,d=void 0===c?badgePropSizeDefault:c,e=a.view,f=void 0===e?badgePropViewDefault:e,g=a.status,h=void 0===g?badgePropStatusDefault:g,i=a.form,j=void 0===i?badgePropFormDefault:i,k=a.icon,l=a.iconLeft,m=a.iconRight,n=a.minified,o=void 0!==n&&n,p=a.label,q=a.as,r=void 0===q?"div":q,s=a.title,t=a.style,u=_objectWithoutProperties(a,_excluded),v=guardStatus(h),w=useTheme(),x=w.themeClassNames,y="system"!==v&&"disabled"!==v&&"filled"===f?classnames(a.className,x.color.accent):a.className,z=null!==l&&void 0!==l?l:k,A=1===[k,l,m,p].filter(Boolean).length&&1>=((null===p||void 0===p?void 0:p.length)||0);return React.createElement(r,Object.assign({},u,{className:cnBadge(_objectSpread({minified:o},!o&&{view:f,form:j,counter:A}),[y]),ref:b,title:s||o&&p,style:_objectSpread(_objectSpread({},t),{},{"--badge-bg-color":getBgColor(v),"--badge-border-color":getBorderColor(v,f),"--badge-horizontal-padding":getHorizontalPadding(d,j,o),"--badge-minified-border-size":getMinifiedBorderSize(d,o),"--badge-size":getSize(d,o),"--badge-text-color":getTextColor(v,f),"--badge-text-size":getTextSize(d),"--badge-degree-mixing":getDegreeMixing(v,f)})}),!o&&React.createElement(React.Fragment,null,renderIcon(z),p,renderIcon(m)))});
//# sourceMappingURL=Badge.js.map