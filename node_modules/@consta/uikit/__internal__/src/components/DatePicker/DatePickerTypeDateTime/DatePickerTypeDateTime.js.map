{"version":3,"file":"DatePickerTypeDateTime.js","names":["addMonths","startOfMonth","React","forwardRef","useEffect","useRef","useClickOutside","useForkRef","setRef","DatePickerDropdown","DatePickerFieldTypeDateTime","datePickerPropFormatTypeDateTime","getDropdownZIndex","getMultiplicityTime","datePickerPropDateTimeViewDefault","useCalendarVisible","useCurrentVisibleDate","DatePickerTypeDateTime","props","ref","events","dateTimeView","locale","dropdownForm","dropdownClassName","dropdownRef","currentVisibleDateProp","currentVisibleDate","onChangeCurrentVisibleDate","multiplicityHoursProp","multiplicityHours","multiplicityMinutesProp","multiplicityMinutes","multiplicitySecondsProp","multiplicitySeconds","renderAdditionalControls","onDropdownOpen","dropdownOpen","ignoreOutsideClicksRefs","disabled","inputRefProp","inputRef","disableDates","otherProps","format","fieldRef","calendarRef","startRef","calendarVisible","setCalendarVisible","maxDate","minDate","value","startOfUnit","setCurrentVisibleDate","current","newVisibleDate","getTime","isActive","ignoreClicksInsideRefs","handler","off","on","onChange","style"],"sources":["../../../../../../src/components/DatePicker/DatePickerTypeDateTime/DatePickerTypeDateTime.tsx"],"sourcesContent":["import addMonths from 'date-fns/addMonths';\nimport startOfMonth from 'date-fns/startOfMonth';\nimport React, { forwardRef, useEffect, useRef } from 'react';\n\nimport { useClickOutside } from '##/hooks/useClickOutside/useClickOutside';\nimport { useForkRef } from '##/hooks/useForkRef';\nimport { setRef } from '##/utils/setRef';\n\nimport { DatePickerDropdown } from '../DatePickerDropdown/DatePickerDropdown';\nimport { DatePickerFieldTypeDateTime } from '../DatePickerFieldTypeDateTime/DatePickerFieldTypeDateTime';\nimport {\n  datePickerPropFormatTypeDateTime,\n  getDropdownZIndex,\n  getMultiplicityTime,\n} from '../helpers';\nimport {\n  datePickerPropDateTimeViewDefault,\n  DatePickerTypeComponent,\n} from '../types';\nimport { useCalendarVisible } from '../useCalendarVisible';\nimport { useCurrentVisibleDate } from '../useCurrentVisibleDate';\n\nexport const DatePickerTypeDateTime: DatePickerTypeComponent<'date-time'> =\n  forwardRef((props, ref) => {\n    const {\n      events,\n      dateTimeView = datePickerPropDateTimeViewDefault,\n      locale,\n      dropdownForm,\n      dropdownClassName,\n      dropdownRef,\n      currentVisibleDate: currentVisibleDateProp,\n      onChangeCurrentVisibleDate,\n      multiplicityHours: multiplicityHoursProp,\n      multiplicityMinutes: multiplicityMinutesProp,\n      multiplicitySeconds: multiplicitySecondsProp,\n      renderAdditionalControls,\n      onDropdownOpen,\n      dropdownOpen,\n      ignoreOutsideClicksRefs,\n      disabled,\n      inputRef: inputRefProp,\n      disableDates,\n      ...otherProps\n    } = props;\n\n    const [multiplicityHours, multiplicityMinutes, multiplicitySeconds] =\n      getMultiplicityTime(\n        otherProps.format || datePickerPropFormatTypeDateTime,\n        multiplicityHoursProp,\n        multiplicityMinutesProp,\n        multiplicitySecondsProp,\n      );\n\n    const fieldRef = useRef<HTMLDivElement>(null);\n    const calendarRef = useRef<HTMLDivElement>(null);\n    const inputRef = useRef<HTMLInputElement>(null);\n\n    const [calendarVisible, setCalendarVisible] = useCalendarVisible({\n      dropdownOpen,\n      onDropdownOpen,\n      disabled,\n      startRef: inputRef,\n    });\n\n    const [currentVisibleDate, setCurrentVisibleDate] = useCurrentVisibleDate({\n      currentVisibleDate: currentVisibleDateProp,\n      maxDate: props.maxDate,\n      minDate: props.minDate,\n      value: props.value,\n      startOfUnit: startOfMonth,\n      onChangeCurrentVisibleDate,\n      calendarVisible,\n    });\n\n    useEffect(() => {\n      if (ref) {\n        setRef(ref, fieldRef.current);\n      }\n    }, [ref, fieldRef]);\n\n    useEffect(() => {\n      if (props.value && dateTimeView === 'classic' && currentVisibleDate) {\n        const newVisibleDate = startOfMonth(props.value);\n        if (newVisibleDate.getTime() !== currentVisibleDate.getTime()) {\n          setCurrentVisibleDate(newVisibleDate);\n        }\n        return;\n      }\n      if (props.value && dateTimeView !== 'classic' && currentVisibleDate) {\n        const newVisibleDate = startOfMonth(props.value);\n        if (\n          newVisibleDate.getTime() !== currentVisibleDate.getTime() &&\n          newVisibleDate.getTime() !==\n            addMonths(currentVisibleDate, 1).getTime()\n        ) {\n          setCurrentVisibleDate(newVisibleDate);\n        }\n      }\n    }, [props.value]);\n\n    useClickOutside({\n      isActive: calendarVisible,\n      ignoreClicksInsideRefs: [\n        fieldRef,\n        calendarRef,\n        ...(ignoreOutsideClicksRefs ?? []),\n      ],\n      handler: setCalendarVisible.off,\n    });\n\n    return (\n      <>\n        <DatePickerFieldTypeDateTime\n          {...otherProps}\n          ref={fieldRef}\n          inputRef={useForkRef([inputRef, inputRefProp])}\n          onClick={setCalendarVisible.on}\n          multiplicityHours={multiplicityHours}\n          multiplicitySeconds={multiplicitySeconds}\n          multiplicityMinutes={multiplicityMinutes}\n          disabled={disabled}\n        />\n        <DatePickerDropdown\n          ref={useForkRef([dropdownRef, calendarRef])}\n          anchorRef={fieldRef}\n          isOpen={calendarVisible}\n          value={props.value || undefined}\n          type=\"date-time\"\n          view={dateTimeView}\n          events={events}\n          className={dropdownClassName}\n          locale={locale}\n          minDate={props.minDate}\n          maxDate={props.maxDate}\n          currentVisibleDate={currentVisibleDate}\n          form={dropdownForm}\n          onChange={props.onChange}\n          renderAdditionalControls={renderAdditionalControls}\n          onChangeCurrentVisibleDate={setCurrentVisibleDate}\n          multiplicityHours={multiplicityHours}\n          multiplicitySeconds={multiplicitySeconds}\n          multiplicityMinutes={multiplicityMinutes}\n          zIndex={getDropdownZIndex(props.style)}\n          disableDates={disableDates}\n        />\n      </>\n    );\n  });\n"],"mappings":"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"}