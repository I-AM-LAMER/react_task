import _toConsumableArray from"@babel/runtime/helpers/toConsumableArray";import _slicedToArray from"@babel/runtime/helpers/slicedToArray";import _objectWithoutProperties from"@babel/runtime/helpers/objectWithoutProperties";var _excluded=["events","dateTimeView","locale","dropdownForm","dropdownClassName","dropdownRef","multiplicityHours","multiplicityMinutes","multiplicitySeconds","renderAdditionalControls","currentVisibleDate","onChangeCurrentVisibleDate","onDropdownOpen","dropdownOpen","ignoreOutsideClicksRefs","disabled","inputRef","disableDates"];import React,{forwardRef,useEffect,useRef}from"react";import{useClickOutside}from"../../../hooks/useClickOutside/useClickOutside";import{useForkRef}from"../../../hooks/useForkRef";import{setRef}from"../../../utils/setRef";import{DatePickerDropdown}from"../DatePickerDropdown/DatePickerDropdown";import{DatePickerFieldTypeTime}from"../DatePickerFieldTypeTime/DatePickerFieldTypeTime";import{datePickerPropFormatTypeDateTime,getDropdownZIndex,getMultiplicityTime}from"../helpers";import{datePickerPropDateTimeViewDefault}from"../types";import{useCalendarVisible}from"../useCalendarVisible";export var DatePickerTypeTime=forwardRef(function(a,b){var c=a.events,d=a.dateTimeView,e=void 0===d?datePickerPropDateTimeViewDefault:d,f=a.locale,g=a.dropdownForm,h=a.dropdownClassName,i=a.dropdownRef,j=a.multiplicityHours,k=a.multiplicityMinutes,l=a.multiplicitySeconds,m=a.renderAdditionalControls,n=a.currentVisibleDate,o=a.onChangeCurrentVisibleDate,p=a.onDropdownOpen,q=a.dropdownOpen,r=a.ignoreOutsideClicksRefs,s=a.disabled,t=a.inputRef,u=a.disableDates,v=_objectWithoutProperties(a,_excluded),w=getMultiplicityTime(v.format||datePickerPropFormatTypeDateTime,j,k,l),x=_slicedToArray(w,3),y=x[0],z=x[1],A=x[2],B=useRef(null),C=useRef(null),D=useRef(null),E=useCalendarVisible({dropdownOpen:q,onDropdownOpen:p,disabled:s,startRef:D}),F=_slicedToArray(E,2),G=F[0],H=F[1];return useEffect(function(){b&&setRef(b,B.current)},[b,B]),useClickOutside({isActive:G,ignoreClicksInsideRefs:[B,C].concat(_toConsumableArray(null!==r&&void 0!==r?r:[])),handler:H.off}),React.createElement(React.Fragment,null,React.createElement(DatePickerFieldTypeTime,Object.assign({},v,{ref:B,inputRef:useForkRef([D,t]),onClick:H.on,multiplicityHours:y,multiplicitySeconds:A,multiplicityMinutes:z,disabled:s})),React.createElement(DatePickerDropdown,{ref:useForkRef([i,C]),anchorRef:B,isOpen:G,value:a.value||void 0,type:"time",view:e,events:c,locale:f,minDate:a.minDate,maxDate:a.maxDate,form:g,className:h,onChange:a.onChange,renderAdditionalControls:m,multiplicityHours:y,multiplicitySeconds:A,multiplicityMinutes:z,zIndex:getDropdownZIndex(a.style),disableDates:u}))});
//# sourceMappingURL=DatePickerTypeTime.js.map