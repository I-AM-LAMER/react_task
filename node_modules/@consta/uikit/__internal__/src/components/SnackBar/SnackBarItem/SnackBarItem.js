import _defineProperty from"@babel/runtime/helpers/defineProperty";import _slicedToArray from"@babel/runtime/helpers/slicedToArray";import _objectWithoutProperties from"@babel/runtime/helpers/objectWithoutProperties";var _excluded=["onClose","autoClose","showProgress","icon","form","message","actions","status","onAutoClose","className","progressView","progress","style"];function ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function _objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?ownKeys(Object(b),!0).forEach(function(c){_defineProperty(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}import"./SnackBarItem.css";import{IconClose}from"@consta/icons/IconClose";import React,{useEffect,useState}from"react";import{Button}from"../../Button";import{Text}from"../../Text";import{useTheme}from"../../Theme";import{useFlag}from"../../../hooks/useFlag";import{cnMixFlex}from"../../../mixs/MixFlex";import{cnMixSpace}from"../../../mixs/MixSpace";import{cn}from"../../../utils/bem";import{isNumber,isString}from"../../../utils/type-guards";import{SnackBarActionButton}from"../SnackBarActionButton";import{SnackBarLine}from"../SnackBarLine/SnackBarLine";import{SnackBarProgress}from"../SnackBarProgress";import{SnackBarTimer}from"../SnackBarTimer/SnackBarTimer";import{snackBarItemStatusDefault,snackBarPropFormDefault,snackBarPropProgressViewDefault}from"../types";var defaultInitialTimerTime=3;export var cnSnackBarItem=cn("SnackBarItem");var getAutoCloseTime=function(a){return!!a&&("number"==typeof a?a:defaultInitialTimerTime)};export var SnackBarItemRender=function(a,b){var c=a.onClose,d=a.autoClose,e=a.showProgress,f=a.icon,g=a.form,h=void 0===g?snackBarPropFormDefault:g,i=a.message,j=a.actions,k=a.status,l=void 0===k?snackBarItemStatusDefault:k,m=a.onAutoClose,n=a.className,o=a.progressView,p=void 0===o?snackBarPropProgressViewDefault:o,q=a.progress,r=a.style,s=_objectWithoutProperties(a,_excluded),t=useTheme(),u=t.themeClassNames,v=useState(null),w=_slicedToArray(v,2),x=w[0],y=w[1],z=useFlag(!1),A=_slicedToArray(z,2),B=A[0],C=A[1],D=C.on,E=C.off,F=useFlag(!1),G=_slicedToArray(F,2),H=G[0],I=G[1].on,J=function(a){return y(a)},K=getAutoCloseTime(d),L=e===void 0||!(isNumber(K)&&0<K),M=function(){m?m():null===c||void 0===c?void 0:c()};useEffect(function(){H||(B?x&&x.pause():x&&x.start())},[B,H,x]);var N=function(){I(),M()},O=c?function(){return c()}:void 0,P=isNumber(q)||!0===q;return React.createElement("div",Object.assign({ref:b,className:cnSnackBarItem({showProgress:e,form:h},[cnMixFlex({flex:"flex",gap:"m"}),cnMixSpace({p:"m"}),u.color.accent,n]),onMouseEnter:K?function handleMouseEnter(){return D()}:void 0,onMouseLeave:K?function handleMouseLeave(){return E()}:void 0,style:_objectSpread(_objectSpread({},r),{},_defineProperty({},"--snack-bar-item-bg","var(--color-bg-".concat(l,")")))},s),K&&"line"!==e&&React.createElement(SnackBarTimer,{className:cnSnackBarItem("Timer"),onMount:J,onTimeIsOver:N,startTime:K,hidden:L}),f&&(L&&"timer"===e||"timer"!==e)&&React.createElement(f,{className:cnSnackBarItem("Icon"),size:"m"}),React.createElement("div",{className:cnSnackBarItem("Content",cnMixFlex({flex:"flex",gap:"s",direction:"column"}))},React.createElement("div",{className:c?cnMixSpace({pR:"m"}):void 0},isString(i)||isNumber(i)?React.createElement(Text,{view:"primary",size:"m",className:cnSnackBarItem("Message"),lineHeight:"s"},i):i),(P||j)&&React.createElement("div",{className:cnSnackBarItem("Actions",[cnMixFlex({flex:"flex",align:"flex-end",gap:"s",justify:"flex-end"})])},j&&React.createElement(SnackBarActionButton,{className:cnSnackBarItem("ActionButtons"),actions:j,form:h}),P&&React.createElement(SnackBarProgress,{progress:q,view:p}))),c&&React.createElement(Button,{className:cnSnackBarItem("CloseButton"),view:"clear",iconLeft:IconClose,form:"round",type:"button",size:"xs",onClick:O}),K&&"line"===e&&React.createElement(SnackBarLine,{className:cnSnackBarItem("Line"),onMount:J,onTimeIsOver:N,startTime:K}))};export var SnackBarItem=React.forwardRef(SnackBarItemRender);
//# sourceMappingURL=SnackBarItem.js.map