{"version":3,"file":"types.js","names":["snackBarItemStatus","snackBarItemStatusDefault","snackBarItemShowProgressProp","snackBarPropForm","snackBarPropFormDefault","snackBarPropProgressView","snackBarPropProgressViewDefault"],"sources":["../../../../../src/components/SnackBar/types.ts"],"sourcesContent":["import { IconComponent } from '@consta/icons/Icon';\n\nimport { PropsWithHTMLAttributesAndRef } from '../../utils/types/PropsWithHTMLAttributes';\n\nexport type SnackBarItemDefault = {\n  key: string | number;\n  message?: React.ReactNode;\n  status?: SnackBarItemStatus;\n  autoClose?: boolean | number;\n  showProgress?: SnackBarItemShowProgressProp;\n  icon?: IconComponent;\n  actions?: SnackBarPropItemAction[];\n  onClose?: (item: SnackBarItemDefault) => void;\n  onAutoClose?: (item: SnackBarItemDefault) => void;\n  progress?: boolean | number;\n};\n\n/**\n * @deprecated since version 3.16.0 use SnackBarItemDefault\n */\nexport type Item = SnackBarItemDefault;\n\nexport type SnackBarPropItemAction = {\n  label: string | number;\n  onClick: React.EventHandler<React.MouseEvent>;\n};\n\nexport type SnackBarActionButtonProps = {\n  actions: SnackBarPropItemAction[];\n  className?: string;\n  form?: SnackBarPropForm;\n};\n\nexport type SnackBarItemProps = PropsWithHTMLAttributesAndRef<\n  Omit<SnackBarItemDefault, 'onClose' | 'onAutoClose'> & {\n    onClose?: () => void;\n    form?: SnackBarPropForm;\n    onAutoClose?: () => void;\n    progressView?: SnackBarPropProgressView;\n    progress?: number | boolean;\n  },\n  HTMLDivElement\n>;\n\nexport const snackBarItemStatus = [\n  'normal',\n  'system',\n  'success',\n  'warning',\n  'alert',\n] as const;\nexport type SnackBarItemStatus = typeof snackBarItemStatus[number];\nexport const snackBarItemStatusDefault: SnackBarItemStatus =\n  snackBarItemStatus[0];\n\nexport const snackBarItemShowProgressProp = ['timer', 'line'] as const;\nexport type SnackBarItemShowProgressProp =\n  typeof snackBarItemShowProgressProp[number];\n\nexport type SnackBarPropGetItemKey<ITEM> = (item: ITEM) => string | number;\nexport type SnackBarPropGetItemMessage<ITEM> = (\n  item: ITEM,\n) => React.ReactNode | undefined;\nexport type SnackBarPropGetItemStatus<ITEM> = (\n  item: ITEM,\n) => SnackBarItemStatus | undefined;\nexport type SnackBarPropGetItemAutoClose<ITEM> = (\n  item: ITEM,\n) => boolean | number | undefined;\nexport type SnackBarPropGetItemShowProgress<ITEM> = (\n  item: ITEM,\n) => SnackBarItemShowProgressProp | undefined;\nexport type SnackBarPropGetItemIcon<ITEM> = (\n  item: ITEM,\n) => IconComponent | undefined;\nexport type SnackBarPropGetItemActions<ITEM> = (\n  item: ITEM,\n) => SnackBarPropItemAction[] | undefined;\nexport type SnackBarPropGetItemOnClose<ITEM> = (\n  item: ITEM,\n) => ((item: ITEM) => void) | undefined;\nexport type SnackBarPropGetItemOnAutoClose<ITEM> = (\n  item: ITEM,\n) => ((item: ITEM) => void) | undefined;\nexport type SnackBarPropGetItemProgress<ITEM> = (\n  item: ITEM,\n) => number | boolean | undefined;\n\nexport type Mappers<ITEM> = {\n  getItemKey?: SnackBarPropGetItemKey<ITEM>;\n  getItemMessage?: SnackBarPropGetItemMessage<ITEM>;\n  getItemStatus?: SnackBarPropGetItemStatus<ITEM>;\n  getItemAutoClose?: SnackBarPropGetItemAutoClose<ITEM>;\n  getItemShowProgress?: SnackBarPropGetItemShowProgress<ITEM>;\n  getItemIcon?: SnackBarPropGetItemIcon<ITEM>;\n  getItemActions?: SnackBarPropGetItemActions<ITEM>;\n  getItemOnClose?: SnackBarPropGetItemOnClose<ITEM>;\n  getItemOnAutoClose?: SnackBarPropGetItemOnAutoClose<ITEM>;\n  getItemProgress?: SnackBarPropGetItemProgress<ITEM>;\n};\n\nexport const snackBarPropForm = ['default', 'round', 'brick'] as const;\nexport type SnackBarPropForm = typeof snackBarPropForm[number];\nexport const snackBarPropFormDefault = snackBarPropForm[0];\n\nexport const snackBarPropProgressView = ['spinText', 'spin', 'text'] as const;\nexport type SnackBarPropProgressView = typeof snackBarPropProgressView[number];\nexport const snackBarPropProgressViewDefault = snackBarPropProgressView[0];\n\nexport type SnackBarProps<ITEM = SnackBarItemDefault> =\n  PropsWithHTMLAttributesAndRef<\n    {\n      items: ITEM[];\n      children?: never;\n      form?: SnackBarPropForm;\n      progressView?: SnackBarPropProgressView;\n      onItemClose?: (item: ITEM) => void;\n      onItemAutoClose?: (item: ITEM) => void;\n    } & Mappers<ITEM>,\n    HTMLDivElement\n  > &\n    (ITEM extends { key: SnackBarItemDefault['key'] }\n      ? {}\n      : { getItemKey: SnackBarPropGetItemKey<ITEM> });\n\nexport type SnackBarComponent = <ITEM = SnackBarItemDefault>(\n  props: SnackBarProps<ITEM>,\n) => React.ReactElement | null;\n\nexport type SnackBarTimerPropOnMount = (object: {\n  pause: () => void;\n  start: () => void;\n}) => void;\n\nexport type SnackBarTimerProps = {\n  onMount: SnackBarTimerPropOnMount;\n  onTimeIsOver: () => void;\n  startTime: number;\n  hidden?: boolean;\n  className?: string;\n};\n\nexport type SnackBarProgressProps = {\n  view: SnackBarPropProgressView;\n  progress?: number | boolean;\n  className?: string;\n};\n\nexport type SnackBarItemComponent = (\n  props: SnackBarItemProps,\n) => React.ReactElement | null;\n"],"mappings":"AA4CA,MAAO,IAAMA,mBAAkB,CAAG,CAChC,QADgC,CAEhC,QAFgC,CAGhC,SAHgC,CAIhC,SAJgC,CAKhC,OALgC,CAA3B,CAQP,MAAO,IAAMC,0BAA6C,CACxDD,kBAAkB,CAAC,CAAD,CADb,CAGP,MAAO,IAAME,6BAA4B,CAAG,CAAC,OAAD,CAAU,MAAV,CAArC,CA8CP,MAAO,IAAMC,iBAAgB,CAAG,CAAC,SAAD,CAAY,OAAZ,CAAqB,OAArB,CAAzB,CAEP,MAAO,IAAMC,wBAAuB,CAAGD,gBAAgB,CAAC,CAAD,CAAhD,CAEP,MAAO,IAAME,yBAAwB,CAAG,CAAC,UAAD,CAAa,MAAb,CAAqB,MAArB,CAAjC,CAEP,MAAO,IAAMC,gCAA+B,CAAGD,wBAAwB,CAAC,CAAD,CAAhE"}